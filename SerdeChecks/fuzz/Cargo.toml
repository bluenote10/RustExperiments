# Inspired by:
# https://github.com/mongodb/bson-rust/commit/8d8e90c9ce7c01df1d3503de1757468be3f475da

[package]
name = "fuzz-experiment"
version = "0.0.1"
authors = ["Fabian Keller <github.100.fkeller@spamgourmet.com>"]
publish = false

[package.metadata]
cargo-fuzz = true

[dependencies.serde_checks]
path = ".."

[dependencies.libfuzzer-sys]
git = "https://github.com/rust-fuzz/libfuzzer-sys.git"

# Prevent this from interfering with workspaces
[workspace]
members = ["."]

[[bin]]
name = "deserialize"
path = "fuzz_targets/deserialize.rs"

#
# General notes
# -------------
#
# To run fuzzer:
# RUST_BACKTRACE=1 cargo +nightly fuzz run deserialize
#
# The output is documented here: https://llvm.org/docs/LibFuzzer.html#output
#
# To make the coverage stuff work, it was necessary to first install cargo-binutils
#
# cargo install cargo-binutils
#
# Note that this seems to install binaries independent of the toolchain, or at least
# the outpuf of
# - cargo install --list
# - cargo +nightly install --list
# - cargo +stable install --list
# seems to be the same.
#
# Then it was necessary to add the `llvm-tools-preview` component. In contrast to binaries
# this seems to be channel specific, i.e., it was necessary to run:
#
# rustup +nightly component add llvm-tools-preview
#
# To check that llvm-profdata is installed properly: find ~/.rustup -iname llvm-profdata
#
# Now coverage can be generated via (https://rust-fuzz.github.io/book/cargo-fuzz/coverage.html):
#
# cargo +nightly fuzz coverage deserialize
#
# To create the HTML output:
#
# cargo cov -- show target/x86_64-unknown-linux-gnu/release/deserialize --format=html -instr-profile=coverage/deserialize/coverage.profdata > index.html
#